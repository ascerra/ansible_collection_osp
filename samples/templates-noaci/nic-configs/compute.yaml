heat_template_version: queens
description: >
  Software Config to drive os-net-config with 2 bonded nics on a bridge with VLANs attached for the compute role.
parameters:
  ControlPlaneIp:
    default: ''
    description: IP address/subnet on the ctlplane network
    type: string
  ExternalInterfaceDefaultRoute:
    default: ''
    description: IP address/subnet on the external network
    type: string
  ExternalIpSubnet:
    default: ''
    description: IP address/subnet on the external network
    type: string
  InternalApiIpSubnet:
    default: ''
    description: IP address/subnet on the internal API network
    type: string
  StorageIpSubnet:
    default: ''
    description: IP address/subnet on the storage network
    type: string
  StorageMgmtIpSubnet:
    default: ''
    description: IP address/subnet on the storage mgmt network
    type: string
  StorageEmcEcsNetworkVlanID:
    default: 570
    description: Vlan ID for the storage network traffic.
    type: number
  TenantIpSubnet:
    default: ''
    description: IP address/subnet on the tenant network
    type: string
  ManagementIpSubnet: # Only populated when including environments/network-management.yaml
    default: ''
    description: IP address/subnet on the management network
    type: string
  BondInterfaceOvsOptions:
    default: bond_mode=4
    description: The ovs_options string for the bond interface. Set things like lacp=active and/or bond_mode=balance-slb using
      this option.
    type: string
  InternalApiNetworkVlanID:
    default: 572
    description: Vlan ID for the internal_api network traffic.
    type: number
  StorageNetworkVlanID:
    default: 564
    description: Vlan ID for the storage network traffic.
    type: number
  ExternalNetworkVlanID:
    default: 403
    description: Vlan ID for the External network traffic.
    type: number
  TenantNetworkVlanID:
    default: 571
    description: Vlan ID for the tenant network traffic.
    type: number
  ManagementNetworkVlanID:
    default: 401
    description: Vlan ID for the management network traffic.
    type: number
  ControlPlaneSubnetCidr: # Override this via parameter_defaults
    default: '{{ overcloud.networks.Control.cidr }}'
    description: The subnet CIDR of the control plane network.
    type: string
  ControlPlaneDefaultRoute: # Override this via parameter_defaults
    default: {{ overcloud.networks.Control.gateway }}
    description: The default route of the control plane network.
    type: string
  ManagementInterfaceDefaultRoute: # Override this via parameter_defaults
    default: {{ overcloud.networks.Management.gateway }}
    description: The default route of the external network.
    type: string
  DnsServers: # Override this vi a parameter_defaults
    default:
{% for dns_server in overcloud.networks.dns_servers %}
    - {{ dns_server }}
{% endfor %}
    description: A list of DNS servers (2 max for some implementations) that will be added to resolv.conf.
    type: comma_delimited_list
  EC2MetadataIp: # Override this via parameter_defaults
    description: The IP address of the EC2 metadata server.
    type: string
resources:
  OsNetConfigImpl:
    type: OS::Heat::SoftwareConfig
    properties:
      group: script
      config:
        str_replace:
          template:
            get_file: /usr/share/openstack-tripleo-heat-templates/network/scripts/run-os-net-config.sh
          params:
            $network_config:
              network_config:
              - type: interface
                name: p3p1
                use_dhcp: false
                defroute: false
                dns_servers:
                  get_param: DnsServers
                addresses:
                - ip_netmask:
                    list_join:
                    - /
                    - - get_param: ControlPlaneIp
                      - get_param: ControlPlaneSubnetCidr
                routes:
                - ip_netmask: 169.254.169.254/32
                  next_hop:
                    get_param: EC2MetadataIp
              - type: linux_bond
                name: bond1
                mtu: 9000
                bonding_options:
                  get_param: BondInterfaceOvsOptions
                members:
                - type: interface
                  name: p1p2
                  mtu: 9000
                  primary: true
                - type: interface
                  mtu: 9000
                  name: p2p2
              - type: vlan
                device: bond1
                mtu: 9000
                vlan_id:
                  get_param: StorageNetworkVlanID
                addresses:
                - ip_netmask:
                    get_param: StorageIpSubnet
              - type: ovs_bridge
                name:
                  bridge_name
                use_dhcp: false
                defroute: false
                members:
                - type: linux_bond
                  name: bond0
                  bonding_options:
                    get_param: BondInterfaceOvsOptions
                  mtu: 1500
                  members:
                  - type: interface
                    name: p1p1
                    mtu: 1500
                    primary: true
                  - type: interface
                    name: p2p1
                    mtu: 1500
                - type: vlan
                  device: bond0
                  mtu: 1500
                  vlan_id:
                    get_param: InternalApiNetworkVlanID
                  addresses:
                  - ip_netmask:
                      get_param: InternalApiIpSubnet
                - type: vlan
                  device: bond0
                  mtu: 1500
                  vlan_id:
                    get_param: TenantNetworkVlanID
                  addresses:
                  - ip_netmask:
                      get_param: TenantIpSubnet
                - type: vlan
                  device: bond0
                  mtu: 1500
                  vlan_id:
                    get_param: ExternalNetworkVlanID
                  dns_servers:
                    get_param: DnsServers
                  addresses:
                  - ip_netmask:
                      get_param: ExternalIpSubnet
{% if overcloud.networks.External.default_route == true %}
                  routes:
                  - ip_netmask: 0.0.0.0/0
                    default: true
                    next_hop:
                      get_param: ExternalInterfaceDefaultRoute
{% endif %}
{% if "Management" in overcloud.networks %}
                - type: vlan
                  device: bond0
                  mtu: 1500
                  vlan_id:
                    get_param: ManagementNetworkVlanID
                  addresses:
                  - ip_netmask:
                      get_param: ManagementIpSubnet
{% if overcloud.networks.Management.default_route == true %}
                  routes:
                  - default: true
                    next_hop:
                      get_param: ManagementInterfaceDefaultRoute
{% endif %}
{% endif %}
outputs:
  OS::stack_id:
    description: The OsNetConfigImpl resource.
    value:
      get_resource: OsNetConfigImpl
